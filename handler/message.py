import shutil
from datetime import datetime
from itertools import zip_longest

from aiogram import types, Bot
from aiogram.dispatcher import FSMContext
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from detection_text.detect_text import get_price_from_photo, get_converted_price, get_description_from_photo, \
    convert_to_rubles_and_kop
from split_photo.splitter import get_split_nikora, get_split_universami
import os


async def message_get_photo_nikora(message: types.Message, state: FSMContext):
    print('–§–æ—Ç–æ –ø—Ä–∏–Ω—è—Ç–æ')
    await message.photo[-1].download('/Users/kseniiamurasheva/PycharmProjects/PriceBot/Photos/photo.jpg')

    if os.path.isdir('/Users/kseniiamurasheva/PycharmProjects/PriceBot/runs'):
        # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª–∏—Ç—å –µ–≥–æ
        shutil.rmtree('/Users/kseniiamurasheva/PycharmProjects/PriceBot/runs')

    get_split_nikora('Photos/photo.jpg')

    prices = []
    descriptions = []

    if os.path.isdir('/Users/kseniiamurasheva/PycharmProjects/PriceBot/runs/detect/exp/crops/price'):
        for photo in os.listdir('/Users/kseniiamurasheva/PycharmProjects/PriceBot/runs/detect/exp/crops/price'):
            one_price = []
            price_url = '/Users/kseniiamurasheva/PycharmProjects/PriceBot/runs/detect/exp/crops/price/'+photo
            price = get_price_from_photo(price_url)
            one_price.append(price)
            if price:
                price = get_converted_price(price)
                rub, kop = convert_to_rubles_and_kop(price)
                one_price.append(f'{rub} —Ä—É–±. {kop} –∫–æ–ø.')
            else:
                one_price.append('–Ω–µ–ø–æ–Ω—è—Ç–Ω–æ')
            prices.append(one_price)

    if os.path.isdir('/Users/kseniiamurasheva/PycharmProjects/PriceBot/runs/detect/exp/crops/description'):
        for description in os.listdir('/Users/kseniiamurasheva/PycharmProjects/PriceBot/runs/detect/exp/crops/description'):
            description_url = '/Users/kseniiamurasheva/PycharmProjects/PriceBot/runs/detect/exp/crops/description/'+description
            description = get_description_from_photo(description_url)
            if description:
                descriptions.append(description)
            else:
                descriptions.append('–Ω–µ–ø–æ–Ω—è—Ç–Ω–æ')

    for pair in prices:
        if pair[0]:
            await message.answer(f'üí∞{pair[0].strip()} –ª–∞—Ä. ‚Äî —ç—Ç–æ <b>{pair[1].strip()}</b> –ø–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ–º—É –∫—É—Ä—Å—É.')

    for desc in descriptions:
        await message.answer(f'–≠—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ ‚Äî {desc.strip()}. –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –µ–≥–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏, –ø—Ä–æ—Å—Ç–æ –≤—ã–¥–µ–ª–∏ –µ–≥–æ –∏ –≤—ã–±–µ—Ä–∏ ¬´–ü–µ—Ä–µ–≤–µ—Å—Ç–∏¬ª (—É–±–µ–¥–∏—Å—å, —á—Ç–æ —ç—Ç–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–∫–ª—é—á–µ–Ω–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Ç–µ–ª–µ–≥—Ä–∞–º–∞)')
    await message.answer(f'–°–º–µ–Ω–∏ –º–∞–≥–∞–∑–∏–Ω —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É Menu –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å —Ü–µ–Ω–Ω–∏–∫ –∏–∑ –ø—Ä–µ–∂–Ω–µ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞')

async def message_get_photo_universami(message: types.Message, state: FSMContext):
    print('–§–æ—Ç–æ –ø—Ä–∏–Ω—è—Ç–æ')
    await message.photo[-1].download('/Users/kseniiamurasheva/PycharmProjects/PriceBot/Photos/photo.jpg')

    if os.path.isdir('/Users/kseniiamurasheva/PycharmProjects/PriceBot/runs'):
        # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª–∏—Ç—å –µ–≥–æ
        shutil.rmtree('/Users/kseniiamurasheva/PycharmProjects/PriceBot/runs')

    get_split_universami('Photos/photo.jpg')

    prices = []
    descriptions = []

    if os.path.isdir('/Users/kseniiamurasheva/PycharmProjects/PriceBot/runs/detect/exp/crops/price'):
        for photo in os.listdir('/Users/kseniiamurasheva/PycharmProjects/PriceBot/runs/detect/exp/crops/price'):
            one_price = []
            price_url = '/Users/kseniiamurasheva/PycharmProjects/PriceBot/runs/detect/exp/crops/price/'+photo
            price = get_price_from_photo(price_url)
            one_price.append(price)
            if price:
                price = get_converted_price(price)
                rub, kop = convert_to_rubles_and_kop(price)
                one_price.append(f'{rub} —Ä—É–±. {kop} –∫–æ–ø.')
            else:
                one_price.append('–Ω–µ–ø–æ–Ω—è—Ç–Ω–æ')
            prices.append(one_price)

    if os.path.isdir('/Users/kseniiamurasheva/PycharmProjects/PriceBot/runs/detect/exp/crops/description'):
        for description in os.listdir('/Users/kseniiamurasheva/PycharmProjects/PriceBot/runs/detect/exp/crops/description'):
            description_url = '/Users/kseniiamurasheva/PycharmProjects/PriceBot/runs/detect/exp/crops/description/'+description
            description = get_description_from_photo(description_url)
            if description:
                descriptions.append(description)
            else:
                descriptions.append('–Ω–µ–ø–æ–Ω—è—Ç–Ω–æ')

    for pair in prices:
        if pair[0]:
            await message.answer(f'üí∞{pair[0].strip()} –ª–∞—Ä. ‚Äî —ç—Ç–æ <b>{pair[1].strip()}</b> –ø–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ–º—É –∫—É—Ä—Å—É.')

    for desc in descriptions:
        await message.answer(f'–≠—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ ‚Äî {desc.strip()}. –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –µ–≥–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏, –ø—Ä–æ—Å—Ç–æ –≤—ã–¥–µ–ª–∏ –µ–≥–æ –∏ –≤—ã–±–µ—Ä–∏ ¬´–ü–µ—Ä–µ–≤–µ—Å—Ç–∏¬ª (—É–±–µ–¥–∏—Å—å, —á—Ç–æ —ç—Ç–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–∫–ª—é—á–µ–Ω–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Ç–µ–ª–µ–≥—Ä–∞–º–∞)')

    await message.answer(f'–°–º–µ–Ω–∏ –º–∞–≥–∞–∑–∏–Ω —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É Menu –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å —Ü–µ–Ω–Ω–∏–∫ –∏–∑ –ø—Ä–µ–∂–Ω–µ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞')